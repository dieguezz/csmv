{"version":3,"sources":["../../../client/components/auth/auth.service.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,CAAC,YAAW;;AAEZ,WAAS,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;AAC1E,QAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AACzB,QAAI,WAAW,GAAG,EAAE,CAAC;AACrB,QAAI,SAAS,GAAG,SAAS,CAAC,SAAS,IAAI,EAAE,CAAC;;AAE1C,QAAI,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,SAAS,EAAE;AAC3D,iBAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;KAC1B;;AAED,QAAI,IAAI,GAAG;;;;;;;;;AAST,WAAK,EAAE,eAAS,IAAI,EAAE,QAAQ,EAAE;AAC9B,eAAO,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE;AAC/B,eAAK,EAAE,IAAI,CAAC,KAAK;AACjB,kBAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CACD,IAAI,CAAC,UAAS,GAAG,EAAE;AAClB,kBAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,qBAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACzB,iBAAO,WAAW,CAAC,QAAQ,CAAC;SAC7B,CAAC,CACD,IAAI,CAAC,UAAS,IAAI,EAAE;AACnB,gBAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC7B,iBAAO,IAAI,CAAC;SACb,CAAC,SACI,CAAC,UAAS,GAAG,EAAE;AACnB,cAAI,CAAC,MAAM,EAAE,CAAC;AACd,gBAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC3B,iBAAO,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SAC5B,CAAC,CAAC;OACJ;;;;;AAKD,YAAM,EAAE,kBAAW;AACjB,gBAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACzB,mBAAW,GAAG,EAAE,CAAC;OAClB;;;;;;;;;AASD,gBAAU,EAAE,oBAAS,IAAI,EAAE,QAAQ,EAAE;AACnC,eAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EACnB,UAAS,IAAI,EAAE;AACb,kBAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAClC,qBAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACzB,iBAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACrC,EACD,UAAS,GAAG,EAAE;AACZ,cAAI,CAAC,MAAM,EAAE,CAAC;AACd,iBAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;SAC9B,CAAC,CAAC,QAAQ,CAAC;OACf;;;;;;;;;;AAUD,oBAAc,EAAE,wBAAS,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE;AAC3D,eAAO,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,WAAW,CAAC,GAAG,EAAE,EAAE;AAClD,qBAAW,EAAE,WAAW;AACxB,qBAAW,EAAE,WAAW;SACzB,EAAE,YAAW;AACZ,iBAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;SAC/B,EAAE,UAAS,GAAG,EAAE;AACf,iBAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;SAC9B,CAAC,CAAC,QAAQ,CAAC;OACb;;;;;;;;;AASD,oBAAc,EAAE,wBAAS,QAAQ,EAAE;AACjC,YAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,iBAAO,WAAW,CAAC;SACpB;;AAED,YAAI,KAAK,GAAG,AAAC,WAAW,CAAC,cAAc,CAAC,UAAU,CAAC,GACjD,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC;AACrC,eAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAClB,IAAI,CAAC,UAAS,IAAI,EAAE;AACnB,gBAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;AACvB,iBAAO,IAAI,CAAC;SACb,EAAE,YAAW;AACZ,gBAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;AACrB,iBAAO,EAAE,CAAC;SACX,CAAC,CAAC;OACN;;;;;;;;;AASD,gBAAU,EAAE,oBAAS,QAAQ,EAAE;AAC7B,YAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,iBAAO,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;SAC3C;;AAED,eAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAC7B,IAAI,CAAC,UAAS,IAAI,EAAE;AACnB,cAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AACrC,gBAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;AACrB,iBAAO,EAAE,CAAC;SACX,CAAC,CAAC;OACN;;;;;;;;;;AAUD,aAAO,EAAE,iBAAS,IAAI,EAAE,QAAQ,EAAE;AAChC,YAAI,OAAO,GAAG,SAAV,OAAO,CAAY,CAAC,EAAE,CAAC,EAAE;AAC3B,iBAAO,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACrD,CAAC;;AAEF,YAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AACxB,iBAAO,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACxC;;AAED,eAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAC7B,IAAI,CAAC,UAAS,IAAI,EAAE;AACnB,cAAI,GAAG,GAAG,AAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GACpC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC;AACnC,gBAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,iBAAO,GAAG,CAAC;SACZ,CAAC,CAAC;OACN;;;;;;;;;AASD,aAAO,EAAE,mBAAW;AAClB,eAAO,IAAI,CAAC,OAAO,CAChB,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;OACvD;;;;;;;AAOD,cAAQ,EAAE,oBAAW;AACnB,eAAO,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;OAC9B;KACF,CAAC;;AAEF,WAAO,IAAI,CAAC;GACb;;AAED,SAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAC3B,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;CAE/B,CAAA,EAAG,CAAC","file":"auth.service.js","sourcesContent":["'use strict';\n\n(function() {\n\nfunction AuthService($location, $http, $cookies, $q, appConfig, Util, User) {\n  var safeCb = Util.safeCb;\n  var currentUser = {};\n  var userRoles = appConfig.userRoles || [];\n\n  if ($cookies.get('token') && $location.path() !== '/logout') {\n    currentUser = User.get();\n  }\n\n  var Auth = {\n\n    /**\n     * Authenticate user and save token\n     *\n     * @param  {Object}   user     - login info\n     * @param  {Function} callback - optional, function(error, user)\n     * @return {Promise}\n     */\n    login: function(user, callback) {\n      return $http.post('/auth/local', {\n        email: user.email,\n        password: user.password\n      })\n      .then(function(res) {\n        $cookies.put('token', res.data.token);\n        currentUser = User.get();\n        return currentUser.$promise;\n      })\n      .then(function(user) {\n        safeCb(callback)(null, user);\n        return user;\n      })\n      .catch(function(err) {\n        Auth.logout();\n        safeCb(callback)(err.data);\n        return $q.reject(err.data);\n      });\n    },\n\n    /**\n     * Delete access token and user info\n     */\n    logout: function() {\n      $cookies.remove('token');\n      currentUser = {};\n    },\n\n    /**\n     * Create a new user\n     *\n     * @param  {Object}   user     - user info\n     * @param  {Function} callback - optional, function(error, user)\n     * @return {Promise}\n     */\n    createUser: function(user, callback) {\n      return User.save(user,\n        function(data) {\n          $cookies.put('token', data.token);\n          currentUser = User.get();\n          return safeCb(callback)(null, user);\n        },\n        function(err) {\n          Auth.logout();\n          return safeCb(callback)(err);\n        }).$promise;\n    },\n\n    /**\n     * Change password\n     *\n     * @param  {String}   oldPassword\n     * @param  {String}   newPassword\n     * @param  {Function} callback    - optional, function(error, user)\n     * @return {Promise}\n     */\n    changePassword: function(oldPassword, newPassword, callback) {\n      return User.changePassword({ id: currentUser._id }, {\n        oldPassword: oldPassword,\n        newPassword: newPassword\n      }, function() {\n        return safeCb(callback)(null);\n      }, function(err) {\n        return safeCb(callback)(err);\n      }).$promise;\n    },\n\n    /**\n     * Gets all available info on a user\n     *   (synchronous|asynchronous)\n     *\n     * @param  {Function|*} callback - optional, funciton(user)\n     * @return {Object|Promise}\n     */\n    getCurrentUser: function(callback) {\n      if (arguments.length === 0) {\n        return currentUser;\n      }\n\n      var value = (currentUser.hasOwnProperty('$promise')) ?\n        currentUser.$promise : currentUser;\n      return $q.when(value)\n        .then(function(user) {\n          safeCb(callback)(user);\n          return user;\n        }, function() {\n          safeCb(callback)({});\n          return {};\n        });\n    },\n\n    /**\n     * Check if a user is logged in\n     *   (synchronous|asynchronous)\n     *\n     * @param  {Function|*} callback - optional, function(is)\n     * @return {Bool|Promise}\n     */\n    isLoggedIn: function(callback) {\n      if (arguments.length === 0) {\n        return currentUser.hasOwnProperty('role');\n      }\n\n      return Auth.getCurrentUser(null)\n        .then(function(user) {\n          var is = user.hasOwnProperty('role');\n          safeCb(callback)(is);\n          return is;\n        });\n    },\n\n     /**\n      * Check if a user has a specified role or higher\n      *   (synchronous|asynchronous)\n      *\n      * @param  {String}     role     - the role to check against\n      * @param  {Function|*} callback - optional, function(has)\n      * @return {Bool|Promise}\n      */\n    hasRole: function(role, callback) {\n      var hasRole = function(r, h) {\n        return userRoles.indexOf(r) >= userRoles.indexOf(h);\n      };\n\n      if (arguments.length < 2) {\n        return hasRole(currentUser.role, role);\n      }\n\n      return Auth.getCurrentUser(null)\n        .then(function(user) {\n          var has = (user.hasOwnProperty('role')) ?\n            hasRole(user.role, role) : false;\n          safeCb(callback)(has);\n          return has;\n        });\n    },\n\n     /**\n      * Check if a user is an admin\n      *   (synchronous|asynchronous)\n      *\n      * @param  {Function|*} callback - optional, function(is)\n      * @return {Bool|Promise}\n      */\n    isAdmin: function() {\n      return Auth.hasRole\n        .apply(Auth, [].concat.apply(['admin'], arguments));\n    },\n\n    /**\n     * Get auth token\n     *\n     * @return {String} - a token string used for authenticating\n     */\n    getToken: function() {\n      return $cookies.get('token');\n    }\n  };\n\n  return Auth;\n}\n\nangular.module('csmvApp.auth')\n  .factory('Auth', AuthService);\n\n})();\n"]}